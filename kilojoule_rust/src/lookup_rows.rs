use super::token::Token;

#[derive(Clone)]
pub struct LookupRow {
    pub state: u64,
    pub token: Token,
    pub follow_token: Option<Token>,
    pub token_group: Option<u64>,
    pub next_state: Option<u64>,
    pub reduce_rule: Option<u64>,
}

pub static LOOKUP_ROWS: &[LookupRow] = &[
    LookupRow {
        state: 0,
        token: Token::AddExpr,
        follow_token: Some(Token::END),
        token_group: None,
        next_state: None,
        reduce_rule: Some(1),
    },
    LookupRow {
        state: 0,
        token: Token::AddExpr,
        follow_token: Some(Token::PLUS),
        token_group: None,
        next_state: Some(2),
        reduce_rule: None,
    },
    LookupRow {
        state: 0,
        token: Token::Expr,
        follow_token: None,
        token_group: None,
        next_state: Some(1),
        reduce_rule: None,
    },
    LookupRow {
        state: 0,
        token: Token::INTEGER,
        follow_token: None,
        token_group: Some(2),
        next_state: None,
        reduce_rule: Some(4),
    },
    LookupRow {
        state: 0,
        token: Token::MulExpr,
        follow_token: Some(Token::END),
        token_group: None,
        next_state: None,
        reduce_rule: Some(2),
    },
    LookupRow {
        state: 0,
        token: Token::MulExpr,
        follow_token: Some(Token::PLUS),
        token_group: None,
        next_state: None,
        reduce_rule: Some(2),
    },
    LookupRow {
        state: 0,
        token: Token::MulExpr,
        follow_token: Some(Token::ASTERISK),
        token_group: None,
        next_state: Some(4),
        reduce_rule: None,
    },
    LookupRow {
        state: 1,
        token: Token::END,
        follow_token: None,
        token_group: Some(1),
        next_state: None,
        reduce_rule: Some(0),
    },
    LookupRow {
        state: 2,
        token: Token::PLUS,
        follow_token: None,
        token_group: Some(0),
        next_state: Some(3),
        reduce_rule: None,
    },
    LookupRow {
        state: 3,
        token: Token::INTEGER,
        follow_token: None,
        token_group: Some(2),
        next_state: None,
        reduce_rule: Some(4),
    },
    LookupRow {
        state: 3,
        token: Token::MulExpr,
        follow_token: Some(Token::END),
        token_group: None,
        next_state: None,
        reduce_rule: Some(3),
    },
    LookupRow {
        state: 3,
        token: Token::MulExpr,
        follow_token: Some(Token::PLUS),
        token_group: None,
        next_state: None,
        reduce_rule: Some(3),
    },
    LookupRow {
        state: 3,
        token: Token::MulExpr,
        follow_token: Some(Token::ASTERISK),
        token_group: None,
        next_state: Some(4),
        reduce_rule: None,
    },
    LookupRow {
        state: 4,
        token: Token::ASTERISK,
        follow_token: None,
        token_group: Some(0),
        next_state: Some(5),
        reduce_rule: None,
    },
    LookupRow {
        state: 5,
        token: Token::INTEGER,
        follow_token: None,
        token_group: Some(2),
        next_state: None,
        reduce_rule: Some(5),
    },
];
